---
- name: create oonipipeline user
  ansible.builtin.user:
    name: oonipipeline
    state: present
    shell: /bin/false
    createhome: no
  tags:
    - oonidata
    - oonipipeline
    - jupyterhub

- ansible.builtin.include_role:
    name: miniconda
  tags:
    - oonidata
    - conda

- ansible.builtin.import_tasks: jupyterhub.yml
  when: enable_jupyterhub
  tags:
    - oonidata
    - jupyterhub

- ansible.builtin.include_role:
    name: nginx
  tags:
    - oonidata
    - nginx

- ansible.builtin.include_role:
    name: geerlingguy.certbot
  tags:
    - oonidata
    - certbot
  vars:
    certbot_admin_email: admin@ooni.org
    certbot_create_extra_args: ""
    certbot_create_if_missing: true
    certbot_create_standalone_stop_services:
      - nginx
    certbot_certs:
      - domains:
          - "{{ inventory_hostname }}"

- name: Install oonipipeline requirements
  ansible.builtin.apt:
    name:
      - net-tools
      - curl
      - git
      - socat
  tags:
    - oonidata
    - oonipipeline

- name: Install OONI pipeline from pip
  ansible.builtin.shell:
    cmd: "{{ miniconda_install_dir }}/bin/pip install -e 'git+https://github.com/ooni/data#egg=oonipipeline&subdirectory=oonipipeline'"
  tags:
    - oonidata
    - oonipipeline

- name: "install conda packages"
  ansible.builtin.shell:
    cmd: "{{ miniconda_install_dir }}/bin/conda install -y {{ item }}"
  loop:
    - pandas
    - numpy
    - altair

- name: "install pip packages"
  ansible.builtin.shell:
    cmd: "{{ miniconda_install_dir }}/bin/pip install {{ item }}"
  loop:
    - clickhouse-driver

- ansible.builtin.import_tasks: oonipipeline-worker.yml
  when: enable_oonipipeline_worker
  tags:
    - oonidata
    - oonipipeline

- name: Write oonidataproxy service
  ansible.builtin.template:
    src: oonidata-proxy.service.j2
    dest: "/etc/systemd/system/oonidata-proxy.service"
    owner: root
    group: root
    mode: "0644"
  notify:
    - Restart oonidata-proxy
  tags:
    - oonipipeline
